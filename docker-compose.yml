
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - .docker/mysql:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-network


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672" 
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network


  app:
    build: .  
    container_name: app
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    ports:
      - "${WEB_SERVER_PORT}:8000"  
      - "${GRPC_SERVER_PORT}:50051" 
      - "${GRAPHQL_SERVER_PORT}:8080" 
    env_file:
      - .env
    environment:
      - DB_DRIVER=${DB_DRIVER}  
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - WEB_SERVER_PORT=${WEB_SERVER_PORT}
      - GRPC_SERVER_PORT=${GRPC_SERVER_PORT}
      - GRAPHQL_SERVER_PORT=${GRAPHQL_SERVER_PORT}
      - RABBITMQ_URL=${RABBITMQ_URL}
    command: /bin/sh -c "env && ./app"
    networks:
      - app-network

  migrate:
    image: migrate/migrate
    container_name: migrate
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./migrations/:/migrations
    command: [ "-path", "/migrations/", "-database", "mysql://root:root@tcp(mysql:3306)/orders", "up" ]

    networks:
      - app-network

networks:
  app-network:
    driver: bridge